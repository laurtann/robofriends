{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","catch","error","console","log","filteredRobots","filter","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qNAceA,EAZF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1B,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCeGK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAOC,GACjB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIJC,EAbG,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,aACpB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,Y,MCIE,SAASC,IAAQ,IAAD,EACDC,mBAAS,IADR,mBACtBjB,EADsB,KACdkB,EADc,OAESD,mBAAS,IAFlB,mBAEtBE,EAFsB,KAETC,EAFS,KAK7BC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAUQ,MACxBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC3B,IAEH,IAIMG,EAAiB/B,EAAOgC,QAAO,SAAA9B,GACnC,OAAOA,EAAMT,KAAKwC,cAAcC,SAASf,EAAYc,kBAEvD,OAAsB,IAAlBjC,EAAOmC,OACF,yCAGL,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWS,aAbM,SAAC+B,GACtBhB,EAAegB,EAAMC,OAAOC,UAaxB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtC,OAAQ+B,S,UCxBbQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDX,M","file":"static/js/main.51a93571.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id }) => {\n  return(\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  \n  return(\n    <div>\n      {\n        robots.map((robot, i) => {\n          return (\n            <Card \n              key={i} \n              id={robots[i].id} \n              name={robots[i].name} \n              email={robots[i].email} \n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ( { searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type='search' \n        placeholder='search robots' \n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Scroll;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport CardList from '../components/CardList';\n// import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n// import { robots } from '../robots';\n\nexport default function App () {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState(\"\");\n\n  // componentDidMount() is same same when passing empty array\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => setRobots(users))\n    .catch(error => console.log(error));\n  }, []);\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n  };\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  })\n  if (robots.length === 0) {\n    return <h1>Loading</h1>\n  } else {\n    return (\n      <div className='tc'>\n        <h1 className = 'f1'>RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          <CardList robots={filteredRobots}/>\n        </Scroll>\n      </div>\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n// import { robots } from './robots';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}